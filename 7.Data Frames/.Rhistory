install.packages("tidyverse")
library(tidyverse)
library(lubridate)
library(lubridate)
quit()
#Vector(R) = A group of data elements of same type stored in a sequence
#Vector made by combine function [c(a1, a2, a3)]
first_variable <- "Hello naman"
vec_1
#Vector(R) = A group of data elements of same type stored in a sequence
#Vector made by combine function [c(a1, a2, a3)]
second_variable <- 46
vec_1 <- c(22,334,112,33)
vec_1
vec_1
vec_1 <- c(22,334,112,33)
vec_1
vec_2 <-c(2:10)
source("~/Desktop/R Course/1Fundamentals.R")
source("~/Desktop/R Course/1Fundamentals.R")
source("~/Desktop/R Course/1Fundamentals.R")
vec_2
source("~/Desktop/R Course/1Fundamentals.R")
source("~/Desktop/R Course/1Fundamentals.R")
typeof(vec_1)
vec_2
len(vec_1)
length(vec_1)
x
x
x
x <- c(1,2,3)
names(x) <- c("a" ,"b", "c")
x
x
x
x
x
x
x
x
today()
today()
ymd("23-04-23")
install.packages("lubridate")
library(lubridate)
ymd("23-04-23")
ymd("2023-01-20")
mdy("January 20th, 2023")
ymd(20210120)
dmy(20-Jan-2025)
dmy(20-January-2025)
dmy("20-January-2025")
#letters h, m, and s (hours, minutes, seconds)
ymd_hms("2025-03-10 08:03:45")
mdy_hm("03-January-2025 08:04")
as_date(now())
data.frame(x=c(1,2,3), y=c(1.3, 5.6, 7.4) , z=c("naman", "ajay" , "soham"))
z[2,1]
z <- data.frame(x=c(1,2,3), y=c(1.2,2.3,8.9))
z[2,1]
file.create("naman.csv")
file.copy("naman.csv", "destination_folder")
final_sale <- my_1st_sale+my_2nd_sale
my_1st_sale <- 39.1281
my_2nd_sale <- 12.1282
final_sale <- my_1st_sale+my_2nd_sale
my_1st_sale <- 39.1281
my_2nd_sale <- 12.1282
final_sale <- my_1st_sale+my_2nd_sale
final_sale
product
#operators and calculations
my_1st_sale <- 39.1281
my_2nd_sale <- 12.1282
final_sale <- my_1st_sale+my_2nd_sale
final_sale
product <- final_sale * 2
product
data("airquality")
View(airquality)
x<- 4
if(x>0){
print("x is greater than 0")
}
x<- 4
if(x>0){
print("x is greater than 0")
}
if(airquality[1, "Temp"] < 80)
{print("It's not a hot day.")
}
x<- 4
if(x>0){
print("x is greater than 0")
}
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
}
x<- 4
if(x>0){
print("x is greater than 0")
}
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
}
else{
x<- 4
if(x>0){
print("x is greater than 0")
}
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
}
else{
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
}
else{
if(airquality[1, "Temp"] < 80)
{print("It's not a hot day.")
}
else{
if(airquality[1, "Temp"] < 80)
{print("It's not a hot day.")
}
else{
if(airquality$temp[1] < 80)
{print("It's not a hot day.")
}
if(airquality$Temp[1] < 80)
{print("It's not a hot day.")
}
else{
if(airquality$Temp[29] < 80)
{print("It's not a hot day.")
}
else{
if(airquality$Temp[29] < 80)
{print("It's not a hot day.")
} else{
print("its a hot day")
}
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
} else{
print("its a hot day")
}
if(airquality[29, "Temp"] < 80)
{print("It's not a hot day.")
} else{
print("its a hot day")
}
ozone_level <- airquality[1,"Ozone"]
if(is.na(ozone_level)){     # if this value is missing with the is.na() function.
print("data is missing ! ")
} else if(ozone_level<30){
print("LOW")
} else if(ozone_level<100){
print("MID")
} else{
print("HIGH")
}
debugSource("~/Desktop/R Course/1Fundamentals.R")
head(diamonds)
head(diamonds);
q()
data("ToothGrowth");
view()
view(ToothGrowth)
view(ToothGrowth)
View(ToothGrowth)
View(ToothGrowth)
data("ToothGrowth");    #to load a dataset
View(ToothGrowth)       #to view dataset
filter_tooth <- filter(ToothGrowth , dose == 0.5);
filter_tooth <- filter(ToothGrowth , dose == 0.5);
install.packages("dplyr")
library(dplyr)
filter_tooth <- filter(ToothGrowth , dose == 0.5);
filter_tooth <- filter(ToothGrowth , dose == 0.5);
filter_tooth
arrange(filter_tooth , len)
arrange(filter(ToothGrowth , dose == 0.5))
arrange(filter(ToothGrowth , dose == 0.5), len)
filtered_pipe <- ToothGrowth %>%
filter(dosr == 0.5)
filtered_pipe <- ToothGrowth %>%
filter(dose == 0.5)
arrange(len)
filtered_pipe <- ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
filtered_pipe
install.packages("tidyverse")
library(ggplot2)
data("diamonds")
view(diamonds)
View(diamonds)
head(diamonds)
summary(diamonds)
#Working with diamonds dataset
#V of view must be capital
View(diamonds)
#Working with diamonds dataset
#V of view must be capital
View(diamonds)  #to view whole dataset
head(diamonds)
str(diamonds)
colnames((diamonds))
mutate(diamonds)
library(tidyverse)
mutate(diamonds, carat_2 = carat*100)
#title: "Lesson 2: Create your own data frame"
#output: html_document
install.packages("tidyverse")
library()
install.packages("tidyverse")
library(tidyverse)
names <- c("naman","ajay","soham","asstea")
age <- c(19, 23, 21 ,12)
people <- data.frame(names, age);
head(people)
str(people)
glimpse(people)
arrange(people, age)
mutate(people, new_age = age+10);
data("diamonds")
as_tibble(diamonds)
new <- as_tibble(diamonds)
new
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(readr)
hostel_bookings <- read_csv("Desktop/R Course/7.Data Frames/hostel_bookings.csv")
View(hostel_bookings)
hotel_bookings <- read_csv("hostel_bookings.csv")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("hostel_bookings.csv")
hotel_bookings <- read_csv("hostel_bookings.csv")
hotel_bookings <- read_csv("hotel_bookings.csv")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("hotel_bookings.csv")
getwd()
list.files()
setwd("~/Desktop/R Course/7.Data Frames/hotel_bookings.csv")
setwd("~/Desktop/R Course/7.Data Frames/")
setwd("~/Desktop/R Course/7.Data Frames/")
list.files()
hotel_bookings <- read_csv("hotel_bookings.csv")
head()
head(hotel_bookings)
str(hotel_bookings)
glimpse(hotel_bookings)
colnames(hotel_bookings)
arrange(hotel_bookings , desc(lead_time))
head(hotel_bookings_2)
hotel_bookings_2 <- arrange(hotel_bookings , desc(lead_time))
head(hotel_bookings_2)
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_2$lead_time)
source("~/Desktop/R Course/7.Data Frames/6Hotel.R", echo=TRUE)
install.packages("skimr")
install.packages("janitor")
install.packages("tidyverse")
install.packages("tidyverse")
hotel_city <- filter(hotel_bookings$hotel=="City Hotel")
hotel_city <- filter(hotel_bookings$hotel=="City Hotel")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
getwd()
list.files()
setwd("~/Desktop/R Course/7.Data Frames/")     #set path to correct folder
list.files()
hotel_bookings <- read_csv("hotel_bookings.csv")
head(hotel_bookings)
str(hotel_bookings)
glimpse(hotel_bookings)
colnames(hotel_bookings)
#to arrange in descending order to lead time
arrange(hotel_bookings , desc(lead_time))
#this will not change the original dataset , soo i have to store it in a variable
hotel_bookings_2 <- arrange(hotel_bookings , desc(lead_time))
head(hotel_bookings_2)
#to get the max we use $ in bw
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_2$lead_time)
#now if i want to focus on 'city hotels' in hotel column
hotel_city <- filter(hotel_bookings$hotel=="City Hotel")
head(hotel_city)
head(hotel_city)
hotel_city <- filter(hotel_bookings$hotel=="City Hotel")
hotel_city <- filter(hotel_booking , hotel_bookings$hotel=="City Hotel")
hotel_city <- filter(hotel_bookings , hotel_bookings$hotel=="City Hotel")
head(hotel_city)
mean(hotel_city$lead_time)
